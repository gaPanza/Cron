package br.com.cron.controller;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;


import br.com.cron.util.Tarefa;
import br.com.cron.util.Tarefa_DAO;
import br.com.cron.util.Menu_Util;

public class Builder {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int iterator = 0;
		// Menu Básico
		System.out.println("      -- Menu --");
		System.out.println("1- Visualizar Tarefas");
		System.out.println("2- Adicionar  Tarefas");
		System.out.println("3- Remover    Tarefas");
		System.out.println("4- Fechar   Agendador");

		iterator = scanner.nextInt();
		switch (iterator) {
		case 1:
			scanner.nextLine();
			consultar();
			break;
		case 2:
			scanner.nextLine();
			Builder.adicionar();
			break;
		case 3:
			scanner.nextLine();
			Builder.remover();
			break;
		case 4:
			scanner.nextLine();
			System.out.println("Obrigado por utilizar o programa!");
			break;
		default:
			System.out.println("Opção inválida");
		}
		scanner.close();
	}

	public static void adicionar() {
		Scanner scanner = new Scanner(System.in);
		Tarefa tarefa = new Tarefa();
		GregorianCalendar gc = new GregorianCalendar();
		
		//Escolhe a Tarefa para adicionar
		System.out.println("Digite a Tarefa para Adicionar: \n 1 - Por dia \n 2 - Por tempo fixo \n 3 - Por dia específico");
		int opcao = scanner.nextInt();
		
		//Padrão para todos
		tarefa.setDataCriacao(gc.getTime());
		System.out.println(tarefa.getDataCriacao());
		
		System.out.println("Digite a Descrição:");
		tarefa.setDescricao(scanner.nextLine());
		scanner.nextLine();
		System.out.println("Digite o Email:");
		tarefa.setEmail(scanner.nextLine());
		
		
		
		//Logica para Tarefa por dia
		if (opcao == 1)
			br.com.cron.util.Menu_Util.Menu_1();
				
				
		
		//Logica para Tempo Fixo
		if (opcao == 2)
			System.out.println("Digite o intervalo de tempo em horas\n");
			int intervalo = scanner.nextInt();
			tarefa.setIntervalo(intervalo);
			
			Tarefa_DAO.getInstance().merge(tarefa);
		
		//Logica para Dia Fixo
		if (opcao == 3)
			System.out.println("Digite a data e o horario dd/MM/yyyy hh:mm");
			String data = scanner.nextLine().trim();
			
			SimpleDateFormat px = new SimpleDateFormat ("dd/MM/yyyy hh:mm");
			
			Date parsedDate;
			try {
				parsedDate = px.parse(data);
				Timestamp timestamp = new Timestamp(parsedDate.getTime());
				tarefa.setData(timestamp);
			} catch (ParseException e) {
				e.printStackTrace();
			}
			
			scanner.close();
	}

	public static void consultar() {
		List<Tarefa> x = Tarefa_DAO.getInstance().findAll();

		for (int i = 0; i < x.size(); i++) {
			System.out.printf("ID: %d    Desc: %s            Email: %s           Data: %tM\n", x.get(i).getId(),
					x.get(i).getDescricao(), x.get(i).getEmail(), x.get(i).getDataCriacao());
		}
	}

	public static void remover() {
		Scanner scanner = new Scanner(System.in);
		consultar();
		System.out.println("Digite a ID da tarefa a ser removida.");
		Tarefa_DAO.getInstance().removeById(scanner.nextInt());
		System.out.println("Tarefa removida com sucesso.");
		scanner.close();
	}
	public static int DayConvert(String a){
		switch (a){
		case "domingo":
			return 1;
			
		case "segunda":
			return 2;
		
		case "terca":
			return 3;
		
		case "quarta":
			return 4;
			
		case "quinta":
			return 5;
			
		case "sexta":
			return 6;
			
		case "sabado":
			return 7;
			
		default:
			System.out.println("Data digitada incorretamente");
			return -1;
		}
	}

}
